//1. Write a Java program to find the longest substring from a given string that doesnâ€™t contain any duplicate characters.
import java.util.*;
public class Main
{
	public static void main(String[] args) {
	    Scanner scanner = new Scanner(System.in);
	    System.out.println("Enter your string:");
	    String s = scanner.nextLine().toLowerCase();
		HashSet<Character> charSet = new HashSet();//set to store characters
        int length = 0;
        int left = 0;// it is start of window
        int startIndex = 0; // to store the start index of the result subarray
        int endIndex = 0; // to store the end index of the result subarray
	//iterate through string, right denotes the end of the window
        for(int right = 0; right < s.length(); right++)
        {
            //if current character is already present then we need to remove characters from the left
            while(charSet.contains(s.charAt(right)))
            {
                charSet.remove(s.charAt(left));
                left++;
            }
            // add current character to set 
            charSet.add(s.charAt(right));
            //if we found the maximum length substring then we need to update indices
            if(length <= right - left + 1)
            {
                length = right - left + 1;
                startIndex = left;
                endIndex = right;
            }
        }
        System.out.println(s.substring(startIndex, endIndex+1));
	}
	
}
